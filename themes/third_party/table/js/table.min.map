{"version":3,"file":"table.min.js","sources":["../../../../../third_party/table/js/table.js"],"names":["$","document","ready","cell_width","cell_height","num_cols","num_rows","row_positions","col_positions","dragging","drag_row","drag_col","last_drag_x","last_drag_y","closest","num","arr","counter","each","Math","abs","this","position","addRowDragger","row_num","append","addColDragger","col_num","addTransitionsClass","addClass","updateTableCells","tabindex","row","col","attr","getTable","getTableLeftBar","getTableCells","getTableCol","getTableRow","getTableRowDragger","undefined","getTableColDragger","getTableRowDeleteLink","updateTableRow","move_index","new_row_num","current_row","current_drag_row","current_row_delete_link","data","row_position","css","console","log","updateRowPositionsCache","i","push","x","y","setTimeout","on","e","preventDefault","the_table","height","new_row_position","width","new_col_num","new_col_position","the_table_row","the_table_row_dragger","the_table_row_delete_link","confirm","remove","removeClass","stopPropagation","drag_element","fadeOut","not","pageY","offset","top","drag_link","closest_row","new_row_index","should_move_row","should_move_row_to_y","should_move_row_down","should_move_row_down_to_y","pageX","left","drag_col_link","closest_col","new_col_index","should_move_over_col_to_x","should_move_over_col_right_to","fadeIn","row_y","row_counter","show","row_x","col_counter"],"mappings":"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","sourcesContent":["$(document).ready(function(e) {\n\n    var table_width = 600;\n    var cell_width = 200;\n    var cell_height = 100;\n    var num_cols = 3;\n    var num_rows = 3;\n    var row_positions = [0];\n    var col_positions = [];\n\n    var dragging = false;       // is currently dragging? true/false\n    var drag_row = false;       // row number being dragged\n    var drag_col = false;       // col number being dragged\n    var last_drag_x = false;    // last X position used for row when dragging\n    var last_drag_y = false;    // last Y position used for col when dragging\n\n    /**\n     * Find the closest number in an array to the number provided\n     *\n     * @param num number to find closest to\n     * @param arr array of numbers\n     * @return object with \"position\" (array index) and \"closest\" (number) (ie. position: 1, closest: 100)\n     */\n    $.closest = function(num, arr) {\n        var closest = null;\n        var counter = -1;\n\n        $.each(arr, function() {\n            if (closest === null || Math.abs(this - num) < Math.abs(closest - num)) {\n                closest = this;\n                counter++;\n            }\n        });\n\n        return {position: counter, closest: closest};\n    };\n\n    /**\n     * Add a row reoder \"flip\" to the table\n     * @param row\n     */\n    $.addRowDragger = function(row_num) {\n        $('.table__table').append('<div class=\"drag-row icon-reorder\" style=\"top:'+((row_num-1) * cell_height)+'px\" data-row=\"'+row_num+'\"></div>');\n        $('.table__table').append('<div class=\"table__table__delete-row icon-remove-circle\" style=\"top: '+((row_num*cell_height)-(cell_height/2)-5)+'px\" data-row=\"'+row_num+'\"></div>');\n    };\n\n    /**\n     * Add a column reoder \"flip\" to the table\n     * @param col_num\n     */\n    $.addColDragger = function(col_num) {\n        $('.table__table').append('<div class=\"drag-col icon-reorder\" style=\"left:'+((col_num*cell_width)-19)+'px\" data-col=\"'+col_num+'\"></div>');\n    };\n\n\n    /**\n     * Add 'transitions' class to elements that should have it after init\n     */\n    $.addTransitionsClass = function() {\n        $('.table__table .table__cell').addClass('transitions');\n    };\n\n    /**\n     * Update all table cells w/correct tabindex etc. - this is needed after\n     * dragging around rows/cols and adding/removing rows/cols\n     */\n    $.updateTableCells = function() {\n\n        /**\n         * Update table cell tabs indexes\n         */\n        var tabindex = 0;\n        for(var row=1; row < (num_rows+1); row++) {\n            for(var col=1; col < (num_cols+1); col++) {\n                tabindex++;\n                $('.table__table .table__cell[data-row=\"'+row+'\"][data-col=\"'+col+'\"] :first-child').attr('tabindex', tabindex);\n            }\n        }\n    };\n\n    /**\n     * Get the table\n     *\n     * @returns {*|jQuery|HTMLElement}\n     */\n    $.getTable = function() {\n        return $('.table__table');\n    };\n\n    $.getTableLeftBar = function() {\n        return $('.table__table__left__bar');\n    };\n\n    /**\n     * Get all table cells\n     *\n     * @returns {*|jQuery|HTMLElement}\n     */\n    $.getTableCells = function() {\n       return $('.table__table .table__cell');\n    };\n\n    /**\n     * Get column by column number\n     *\n     * @param col_num\n     */\n    $.getTableCol = function(col_num) {\n        return $('.table__table .table__cell[data-col='+col_num+']');\n    };\n\n    /**\n     * Get row by row number\n     *\n     * @param row_num\n     */\n    $.getTableRow = function(row_num) {\n       return $('.table__table .table__cell[data-row=\"'+(row_num)+'\"]');\n    };\n\n    /**\n     * Get a specific row dragger by row number, or all row draggers if row_num not specified\n     *\n     * @param row_num (can be empty)\n     */\n    $.getTableRowDragger = function(row_num) {\n        if(row_num !== undefined) {\n            return $('.drag-row[data-row=\"'+row_num+'\"]');\n        } else {\n            return $('.drag-row');\n        }\n    };\n\n    /**\n     * Get col dragger by column number, or all column draggers if col_num not specified\n     *\n     * @param col_num (can be empty)\n     */\n    $.getTableColDragger = function(col_num) {\n        if(col_num !== undefined) {\n            return $('.drag-col[data-col=\"'+col_num+'\"]');\n        } else {\n            return $('.drag-col');\n        }\n    };\n\n\n    /**\n     * Get row delete link by row number\n     *\n     * @param row_num\n     */\n    $.getTableRowDeleteLink = function(row_num) {\n        if(row_num !== undefined) {\n            return $('.table__table__delete-row[data-row=\"'+row_num+'\"]');\n        } else {\n            return $('.table__table__delete-row');\n        }\n    };\n\n\n    /**\n     * Will update a table row and it's action icons to the correct postion\n     * @param row_num\n     */\n    $.updateTableRow = function(row_num, move_index) {\n\n        var new_row_num = row_num;\n        var current_row = $.getTableRow(row_num);\n        var current_drag_row = $.getTableRowDragger(row_num);\n        var current_row_delete_link = $.getTableRowDeleteLink(row_num);\n\n        if(move_index !== undefined) {\n            new_row_num = row_num + move_index;\n            current_row.data('row', new_row_num);\n            current_row.attr('data-row', new_row_num);\n            current_drag_row.data('row', new_row_num);\n            current_drag_row.attr('data-row', new_row_num);\n            current_row_delete_link.data('row', new_row_num);\n            current_row_delete_link.attr('data-row', new_row_num);\n        }\n\n        var row_position = row_positions[new_row_num-1];\n        current_drag_row.css('top', row_position + 'px' );\n        current_row.css('top', row_position + 'px' );\n\n        console.log(\"delete-link=\"+current_row_delete_link);\n\n        current_row_delete_link.css('top', (row_position + (cell_height/2)-5) + 'px');\n    };\n\n\n    /**\n     * Update row positions array\n     */\n    $.updateRowPositionsCache = function() {\n        row_positions = [];\n        for(var i=0; i < num_rows; i++) {\n            var row_position = i*cell_height;\n            row_positions.push( row_position );\n        }\n    };\n\n\n\n\n\n\n\n    /**\n     * Initiate the table. Will move cells around to their correct\n     * initial positions.\n     *\n     */\n\n    var x = 0;\n    var y = 0;\n\n    $.addRowDragger(1); // add for 1st\n\n    $.getTableCells().each(function(e) {\n        if(x >= num_cols) {\n            x = 0;\n            y++;\n\n            $.addRowDragger(y+1);\n\n            row_positions.push(y*cell_height);\n        }\n        $(this).css('left', x*cell_width);\n        $(this).css('top', y*cell_height);\n\n        if(y === 0) {\n            col_positions.push(x*cell_width);            // as long as we are on first row, store col positions\n            $.addColDragger(x+1);\n        }\n\n        x++;\n    });\n\n\n    // add transitions class after we have positioned them\n    setTimeout($.addTransitionsClass, 500);\n\n\n    /**\n     * Add row button click handler\n     */\n    $('.table__table__add-row').on('click', function(e) {\n        e.preventDefault();\n\n        var the_table = $.getTable();\n        the_table.css('height', $('.table__table').height() + cell_height);\n        var new_row_num = num_rows+1;\n        var new_row_position = (num_rows*cell_height);\n\n        $.addRowDragger(new_row_num);\n\n        for(var i=0; i < num_cols; i++ ) {\n            the_table.append(\n                '<div style=\"top:'+new_row_position+'px; left:'+(i*cell_width)+'px\" class=\"table__cell transitions\" data-row=\"'+new_row_num+'\" data-col=\"'+(i+1)+'\"><textarea></textarea></div>'\n            );\n        }\n\n        row_positions.push(new_row_position);\n        num_rows++;\n\n        $.updateTableCells();\n    });\n\n    /**\n     * Add col button click handler\n     */\n    $('.table__table__add-col').on('click', function(e) {\n        e.preventDefault();\n\n        var the_table = $.getTable();\n        the_table.css('width', $('.table__table').width() + cell_width);\n        var new_col_num = num_cols+1;\n        var new_col_position = (num_cols*cell_width);\n\n        $.addColDragger(new_col_num);\n        for(var i=0; i < num_rows; i++) {\n            the_table.append(\n                '<div style=\"top:'+(i*cell_height)+'px; left:'+new_col_position+'px\" class=\"table__cell transitions\" data-row=\"'+(i+1)+'\" data-col=\"'+new_col_num+'\"><textarea></textarea></div>'\n            );\n        }\n\n        col_positions.push(new_col_position);\n        num_cols++;\n\n        $.updateTableCells();\n    });\n\n\n    /**\n     * Delete row button click handler\n     */\n    $(document).on('click','.table__table__delete-row', function(e) {\n        var row = $(this).data('row');\n        var the_table_row = $.getTableRow(row);\n        var the_table_row_dragger = $.getTableRowDragger(row);\n        var the_table_row_delete_link = $.getTableRowDeleteLink(row);\n        var the_table = $.getTable();\n\n        the_table_row.addClass('table__cell-pending-delete');\n        if(confirm('Sure you want to delete the row?')) {\n\n            // remove the\n            the_table_row.remove();\n            the_table_row_dragger.remove();\n            the_table_row_delete_link.remove();\n\n            num_rows--;\n            the_table.css('height', cell_height*num_rows);\n            $.updateRowPositionsCache();\n\n            // move all rows below the deleted row one up\n            for(var i=row; i <= num_rows; i++) {\n                $.updateTableRow(i+1, -1);\n            }\n\n            $.updateTableCells();\n\n        } else {\n            the_table_row.removeClass('table__cell-pending-delete');\n        }\n    });\n\n\n    /**\n     * drag-row mouse handler\n     */\n    $(document).on('mousedown', '.drag-row', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        $(this).addClass('active__dragging__link');\n        var row = $(this).data('row');\n        var drag_element = $.getTableRow(row);\n        drag_element.removeClass('transitions').addClass('table__dragging__element');\n\n        $.getTableRowDeleteLink().fadeOut();\n\n        $('.drag-row').not('.active__dragging__link').fadeOut();\n\n        dragging = true;\n        drag_row = row;\n        drag_col = false;\n        return false;\n    });\n\n\n    /**\n     * drag-col mouse handler\n     */\n    $(document).on('mousedown', '.drag-col', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        $(this).addClass('active__dragging__link');\n\n        var col = $(this).data('col');\n\n\n        $.getTableCol(col).removeClass('transitions').addClass('table__dragging__element');\n\n        $('.drag-col').not('.active__dragging__link').fadeOut();\n\n        dragging = true;\n        drag_col = col;\n        drag_row = false;\n\n        return false;\n    });\n\n    $(document).on('mousemove', function(e) {\n        e.preventDefault();\n\n        if(dragging) {\n\n            var the_table = $.getTable();\n\n            if(drag_row) {\n                last_drag_y = e.pageY - the_table.offset().top;\n\n                var drag_link = $('.drag-row.active__dragging__link');\n\n                /**\n                 * Move the row being dragged\n                 */\n                drag_link.css('top', last_drag_y+'px');\n                drag_link.css('left', '-20px');\n                drag_link.css('position', 'absolute');\n\n                $('.table__dragging__element').each(function(e) {\n                    $(this).css('top', last_drag_y + 'px');\n                });\n\n                var closest_row = $.closest(last_drag_y, row_positions);\n                var new_row_index = closest_row.position+1;\n\n                /**\n                 * We are moving down, so move the one beneath up\n                 */\n                if((closest_row.position+1) > drag_row) {\n\n                    var should_move_row = closest_row.position+1;\n                    var should_move_row_to_y = closest_row.closest - cell_height;\n\n                    $.getTableRow(should_move_row).each(function(e) {\n                        $(this).css('top', (should_move_row_to_y) + 'px');\n                        $(this).attr('data-row', should_move_row-1);\n                        $(this).data('row', should_move_row-1);\n                    });\n\n                    /**\n                     * Update row information for the row we are currently dragging\n                     */\n                     $('.table__dragging__element').each(function(e) {\n                        $(this).attr('data-row', new_row_index+1);\n                        $(this).data('row', new_row_index+1);\n                    });\n\n                    drag_row = new_row_index+1;\n\n\n                } else if((closest_row.position+1) < drag_row) {\n\n                    var should_move_row_down = closest_row.position+1;\n                    var should_move_row_down_to_y = should_move_row_down*cell_height;\n\n                    $.getTableRow(should_move_row_down).each(function(e) {\n                        $(this).css('top', (should_move_row_down_to_y) + 'px');\n                        $(this).attr('data-row', should_move_row_down+1);\n                        $(this).data('row', should_move_row_down+1);\n                    });\n\n                    /**\n                     * Update row information for the row being dragged\n                     */\n\n                    $('.table__dragging__element').each(function(e) {\n                        $(this).attr('data-row', new_row_index);\n                        $(this).data('row', new_row_index);\n                    });\n\n                    drag_row = new_row_index;\n                }\n\n            } else if(drag_col) {\n\n                last_drag_x = e.pageX - the_table.offset().left - cell_width;\n\n                var drag_col_link = $('.drag-col.active__dragging__link');\n\n                /**\n                 * Move the row being dragged\n                 */\n                drag_col_link.css('top', '-20px');\n                drag_col_link.css('left', (last_drag_x+cell_width-19)+'px');\n                drag_col_link.css('position', 'absolute');\n\n                /**\n                 * Move the column being dragged\n                 */\n                $('.table__dragging__element').each(function(e) {\n                    $(this).css('left', last_drag_x + 'px');\n                });\n\n                var closest_col = $.closest(last_drag_x, col_positions);\n                var new_col_index = closest_col.position+1;\n\n                if(new_col_index > drag_col) {\n\n                    var should_move_over_col_to_x = (closest_col.position-1) * cell_width;\n\n                    /**\n                     * Move the col we are over left\n                     */\n                    $.getTableCol(new_col_index).each(function(e) {\n                        $(this).css('left', (should_move_over_col_to_x) + 'px');\n                        $(this).attr('data-col', new_col_index-1);\n                        $(this).data('col', new_col_index-1);\n                    });\n\n                    $('.table__dragging__element').each(function(e) {\n                        $(this).attr('data-col', new_col_index);\n                        $(this).data('col', new_col_index);\n                    });\n\n                    drag_col = new_col_index;\n\n\n                } else if(new_col_index < drag_col) {\n\n                    var should_move_over_col_right_to =  (closest_col.position+1) * cell_width;\n\n                    /**\n                     * Move the col we are over right\n                     */\n                    $.getTableCol(new_col_index).each(function(e) {\n                        $(this).css('left', (should_move_over_col_right_to) + 'px');\n                        $(this).attr('data-col', new_col_index+1);\n                        $(this).data('col', new_col_index+1);\n                    });\n\n                    $('.table__dragging__element').each(function(e) {\n                        $(this).attr('data-col', new_col_index);\n                        $(this).data('col', new_col_index);\n                    });\n\n                    drag_col = new_col_index;\n\n                }\n            }\n        }\n\n        return false;\n    });\n\n    $(document).on('mouseup', function(e) {\n        e.preventDefault();\n        dragging = false;\n\n        $('.active__dragging__link').removeClass('active__dragging__link');\n\n        if(drag_row) {  // we were dragging a row, so find the closest spot for it\n\n            $.getTableRowDeleteLink().fadeIn();\n\n            var closest_row = $.closest(last_drag_y, row_positions);\n            var row_y = closest_row.closest;\n            $('.table__dragging__element').css('top', row_y+'px');\n\n            /**\n             * Go through all drag rows and position them correctly + set data-row based on position in HTML\n             */\n            var row_counter = 1;\n            $.getTableRowDragger().each(function(e) {\n                $(this).css('top', ((row_counter-1) * cell_height) + 'px' );\n                $(this).attr('data-row', row_counter);\n                $(this).data('row', row_counter);\n                row_counter++;\n\n                $(this).show();\n            });\n\n\n        } else if(drag_col) {\n\n            var closest_col = $.closest(last_drag_x, col_positions);\n            var row_x = closest_col.closest;\n            $('.table__dragging__element').css('left', row_x+'px');\n\n            var col_counter = 1;\n            $.getTableColDragger().each(function(e) {\n                $(this).css('left', ((col_counter * cell_width)-19) + 'px' );\n                $(this).attr('data-col', col_counter);\n                $(this).data('col', col_counter);\n                col_counter++;\n\n                $(this).show();\n            });\n\n        }\n\n        $.getTableCells().removeClass('table__dragging__element').addClass('transitions');\n\n        $.updateTableCells();\n\n        drag_row = false;\n        drag_col = false;\n\n        return false;\n    });\n\n\n});"]}