{"version":3,"file":"table.min.js","sources":["../../../../../third_party/table/js/table.js"],"names":["$","document","ready","cell_width","cell_height","num_cols","num_rows","row_positions","col_positions","dragging","drag_row","drag_col","last_drag_x","last_drag_y","closest","num","arr","counter","each","Math","abs","this","position","addRowDragger","row_num","append","addColDragger","col_num","addTransitionsClass","addClass","updateTableCells","tabindex","row","col","attr","updateRowPositionsCache","i","push","x","y","css","setTimeout","on","e","preventDefault","height","new_row_num","new_row_position","width","new_col_num","new_col_position","data","confirm","remove","removeClass","stopPropagation","drag_element","not","fadeOut","pageY","offset","top","drag_link","closest_row","new_row_index","should_move_row","should_move_row_to_y","should_move_row_down","should_move_row_down_to_y","pageX","left","drag_col_link","closest_col","new_col_index","should_move_over_col_to_x","should_move_over_col_right_to","row_y","row_counter","show","row_x","col_counter"],"mappings":"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","sourcesContent":["$(document).ready(function(e) {\n\n    var table_width = 600;\n    var cell_width = 200;\n    var cell_height = 100;\n    var num_cols = 3;\n    var num_rows = 3;\n    var row_positions = [0];\n    var col_positions = [];\n\n    var dragging = false;       // is currently dragging? true/false\n    var drag_row = false;       // row number being dragged\n    var drag_col = false;       // col number being dragged\n    var last_drag_x = false;    // last X position used for row when dragging\n    var last_drag_y = false;    // last Y position used for col when dragging\n\n    /**\n     * Find the closest number in an array to the number provided\n     *\n     * @param num number to find closest to\n     * @param arr array of numbers\n     * @return object with \"position\" (array index) and \"closest\" (number) (ie. position: 1, closest: 100)\n     */\n    $.closest = function(num, arr) {\n        var closest = null;\n        var counter = -1;\n\n        $.each(arr, function() {\n            if (closest === null || Math.abs(this - num) < Math.abs(closest - num)) {\n                closest = this;\n                counter++;\n            }\n        });\n\n        return {position: counter, closest: closest};\n    };\n\n    /**\n     * Add a row reoder \"flip\" to the table\n     * @param row\n     */\n    $.addRowDragger = function(row_num) {\n        $('.table__table').append('<div class=\"drag-row icon-reorder\" style=\"top:'+((row_num-1) * cell_height)+'px\" data-row=\"'+row_num+'\"></div>');\n        $('.table__table').append('<div class=\"table__table__delete-row icon-remove-circle\" style=\"top: '+((row_num*cell_height)-(cell_height/2)-5)+'px\" data-row=\"'+row_num+'\"></div>');\n    };\n\n    /**\n     * Add a column reoder \"flip\" to the table\n     * @param col_num\n     */\n    $.addColDragger = function(col_num) {\n        $('.table__table').append('<div class=\"drag-col icon-reorder\" style=\"left:'+((col_num*cell_width)-19)+'px\" data-col=\"'+col_num+'\"></div>');\n    };\n\n\n    /**\n     * Add 'transitions' class to elements that should have it after init\n     */\n    $.addTransitionsClass = function() {\n        $('.table__table .table__cell').addClass('transitions');\n    };\n\n    /**\n     * Update all table cells w/correct tabindex etc. - this is needed after\n     * dragging around rows/cols and adding/removing rows/cols\n     */\n    $.updateTableCells = function() {\n\n        /**\n         * Update table cell tabs indexes\n         */\n        var tabindex = 0;\n        for(var row=1; row < (num_rows+1); row++) {\n            for(var col=1; col < (num_cols+1); col++) {\n                tabindex++;\n                $('.table__table .table__cell[data-row=\"'+row+'\"][data-col=\"'+col+'\"] :first-child').attr('tabindex', tabindex);\n            }\n        }\n    };\n\n    /**\n     * Update row positions array\n     */\n    $.updateRowPositionsCache = function() {\n        row_positions = [];\n        for(var i=0; i < num_rows; i++) {\n            row_positions.push( i*cell_height );\n        }\n    };\n\n\n\n\n\n    /**\n     * Initiate the table. Will move cells around to their correct\n     * initial positions.\n     *\n     */\n\n    var x = 0;\n    var y = 0;\n\n    $.addRowDragger(1); // add for 1st\n\n    $('.table__table .table__cell').each(function(e) {\n        if(x >= num_cols) {\n            x = 0;\n            y++;\n\n            $.addRowDragger(y+1);\n\n            row_positions.push(y*cell_height);\n        }\n        $(this).css('left', x*cell_width);\n        $(this).css('top', y*cell_height);\n\n        if(y === 0) {\n            col_positions.push(x*cell_width);            // as long as we are on first row, store col positions\n            $.addColDragger(x+1);\n        }\n\n        x++;\n    });\n\n\n    // add transitions class after we have positioned them\n    setTimeout($.addTransitionsClass, 500);\n\n\n    /**\n     * Add row button click handler\n     */\n    $('.table__table__add-row').on('click', function(e) {\n        e.preventDefault();\n        $('.table__table').css('height', $('.table__table').height() + cell_height);\n        var new_row_num = num_rows+1;\n        var new_row_position = (num_rows*cell_height);\n\n        $.addRowDragger(new_row_num);\n\n        for(var i=0; i < num_cols; i++ ) {\n            $('.table__table').append(\n                '<div style=\"top:'+new_row_position+'px; left:'+(i*cell_width)+'px\" class=\"table__cell transitions\" data-row=\"'+new_row_num+'\" data-col=\"'+(i+1)+'\"><textarea></textarea></div>'\n            );\n        }\n\n        row_positions.push(new_row_position);\n        num_rows++;\n\n        $.updateTableCells();\n    });\n\n    /**\n     * Add col button click handler\n     */\n    $('.table__table__add-col').on('click', function(e) {\n        e.preventDefault();\n\n        $('.table__table').css('width', $('.table__table').width() + cell_width);\n        var new_col_num = num_cols+1;\n        var new_col_position = (num_cols*cell_width);\n\n        $.addColDragger(new_col_num);\n        for(var i=0; i < num_rows; i++) {\n            $('.table__table').append(\n                '<div style=\"top:'+(i*cell_height)+'px; left:'+new_col_position+'px\" class=\"table__cell transitions\" data-row=\"'+(i+1)+'\" data-col=\"'+new_col_num+'\"><textarea></textarea></div>'\n            );\n        }\n\n        col_positions.push(new_col_position);\n        num_cols++;\n\n        $.updateTableCells();\n    });\n\n\n    /**\n     * Delete row\n     */\n    $(document).on('click','.table__table__delete-row', function(e) {\n        var row = $(this).data('row');\n        $('.table__table .table__cell[data-row=\"'+row+'\"]').addClass('table__cell-pending-delete');\n        if(confirm('Sure you want to delete the row?')) {\n            $('.table__table .table__cell[data-row=\"'+row+'\"]').remove();\n            $('.drag-row[data-row=\"'+row+'\"]').remove();\n            $('.table__table__delete-row[data-row=\"'+row+'\"]').remove();\n        }\n\n        $('.table__table .table__cell[data-row=\"'+row+'\"]').removeClass('table__cell-pending-delete');\n\n        num_rows--;\n        $('.table__table').css('height', cell_height*num_rows);\n        $.updateRowPositionsCache();\n    });\n\n\n    var start_x = 0;\n    var start_y = 0;\n\n    $(document).on('mousedown', '.drag-row', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        $(this).addClass('active__dragging__link');\n        var row = $(this).data('row');\n        var drag_element = $('.table__table .table__cell[data-row='+row+']');\n        drag_element.removeClass('transitions').addClass('table__dragging__element');\n\n        $('.drag-row').not('.active__dragging__link').fadeOut();\n\n        dragging = true;\n        drag_row = row;\n        drag_col = false;\n        return false;\n    });\n\n    $(document).on('mousedown', '.drag-col', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        $(this).addClass('active__dragging__link');\n\n        var col = $(this).data('col');\n        $('.table__table .table__cell[data-col='+col+']').removeClass('transitions').addClass('table__dragging__element');\n\n        $('.drag-col').not('.active__dragging__link').fadeOut();\n\n        dragging = true;\n        drag_col = col;\n        drag_row = false;\n\n        return false;\n    });\n\n    $(document).on('mousemove', function(e) {\n        e.preventDefault();\n\n        if(dragging) {\n            if(drag_row) {\n                last_drag_y = e.pageY - $('.table__table').offset().top;\n\n                var drag_link = $('.drag-row.active__dragging__link');\n\n                /**\n                 * Move the row being dragged\n                 */\n                drag_link.css('top', last_drag_y+'px');\n                drag_link.css('left', '-20px');\n                drag_link.css('position', 'absolute');\n\n                $('.table__dragging__element').each(function(e) {\n                    $(this).css('top', last_drag_y + 'px');\n                });\n\n                var closest_row = $.closest(last_drag_y, row_positions);\n                var new_row_index = closest_row.position+1;\n\n                /**\n                 * We are moving down, so move the one beneath up\n                 */\n                if((closest_row.position+1) > drag_row) {\n\n                    var should_move_row = closest_row.position+1;\n                    var should_move_row_to_y = closest_row.closest - cell_height;\n\n                    $('.table__table .table__cell[data-row='+(should_move_row)+']').each(function(e) {\n                        $(this).css('top', (should_move_row_to_y) + 'px');\n                        $(this).attr('data-row', should_move_row-1);\n                        $(this).data('row', should_move_row-1);\n                    });\n\n                    /**\n                     * Update row information for the row we are currently dragging\n                     */\n                     $('.table__dragging__element').each(function(e) {\n                        $(this).attr('data-row', new_row_index+1);\n                        $(this).data('row', new_row_index+1);\n                    });\n\n                    drag_row = new_row_index+1;\n\n\n                } else if((closest_row.position+1) < drag_row) {\n\n                    var should_move_row_down = closest_row.position+1;\n                    var should_move_row_down_to_y = should_move_row_down*cell_height;\n\n                    $('.table__table .table__cell[data-row='+(should_move_row_down)+']').each(function(e) {\n                        $(this).css('top', (should_move_row_down_to_y) + 'px');\n                        $(this).attr('data-row', should_move_row_down+1);\n                        $(this).data('row', should_move_row_down+1);\n                    });\n\n                    /**\n                     * Update row information for the row being dragged\n                     */\n\n                    $('.table__dragging__element').each(function(e) {\n                        $(this).attr('data-row', new_row_index);\n                        $(this).data('row', new_row_index);\n                    });\n\n                    drag_row = new_row_index;\n                }\n\n            } else if(drag_col) {\n\n                last_drag_x = e.pageX - $('.table__table').offset().left - cell_width;\n\n                var drag_col_link = $('.drag-col.active__dragging__link');\n\n                /**\n                 * Move the row being dragged\n                 */\n                drag_col_link.css('top', '-20px');\n                drag_col_link.css('left', (last_drag_x+cell_width-19)+'px');\n                drag_col_link.css('position', 'absolute');\n\n                /**\n                 * Move the column being dragged\n                 */\n                $('.table__dragging__element').each(function(e) {\n                    $(this).css('left', last_drag_x + 'px');\n                });\n\n                var closest_col = $.closest(last_drag_x, col_positions);\n                var new_col_index = closest_col.position+1;\n\n                if(new_col_index > drag_col) {\n\n                    var should_move_over_col_to_x = (closest_col.position-1) * cell_width;\n\n                    /**\n                     * Move the col we are over left\n                     */\n                    $('.table__table .table__cell[data-col='+(new_col_index)+']').each(function(e) {\n                        $(this).css('left', (should_move_over_col_to_x) + 'px');\n                        $(this).attr('data-col', new_col_index-1);\n                        $(this).data('col', new_col_index-1);\n                    });\n\n                    $('.table__dragging__element').each(function(e) {\n                        $(this).attr('data-col', new_col_index);\n                        $(this).data('col', new_col_index);\n                    });\n\n                    drag_col = new_col_index;\n\n\n                } else if(new_col_index < drag_col) {\n\n                    var should_move_over_col_right_to =  (closest_col.position+1) * cell_width;\n\n                    /**\n                     * Move the col we are over right\n                     */\n                    $('.table__table .table__cell[data-col='+(new_col_index)+']').each(function(e) {\n                        $(this).css('left', (should_move_over_col_right_to) + 'px');\n                        $(this).attr('data-col', new_col_index+1);\n                        $(this).data('col', new_col_index+1);\n                    });\n\n                    $('.table__dragging__element').each(function(e) {\n                        $(this).attr('data-col', new_col_index);\n                        $(this).data('col', new_col_index);\n                    });\n\n                    drag_col = new_col_index;\n\n                }\n            }\n        }\n\n        return false;\n    });\n\n    $(document).on('mouseup', function(e) {\n        e.preventDefault();\n        dragging = false;\n\n        $('.active__dragging__link').removeClass('active__dragging__link');\n\n        if(drag_row) {  // we were dragging a row, so find the closest spot for it\n\n            var closest_row = $.closest(last_drag_y, row_positions);\n            var row_y = closest_row.closest;\n            $('.table__dragging__element').css('top', row_y+'px');\n\n            /**\n             * Go through all drag rows and position them correctly + set data-row based on position in HTML\n             */\n            var row_counter = 1;\n            $('.drag-row').each(function(e) {\n                $(this).css('top', ((row_counter-1) * cell_height) + 'px' );\n                $(this).attr('data-row', row_counter);\n                $(this).data('row', row_counter);\n                row_counter++;\n\n                $(this).show();\n            });\n\n\n        } else if(drag_col) {\n\n            var closest_col = $.closest(last_drag_x, col_positions);\n            var row_x = closest_col.closest;\n            $('.table__dragging__element').css('left', row_x+'px');\n\n            var col_counter = 1;\n            $('.drag-col').each(function(e) {\n                $(this).css('left', ((col_counter * cell_width)-19) + 'px' );\n                $(this).attr('data-col', col_counter);\n                $(this).data('col', col_counter);\n                col_counter++;\n\n                $(this).show();\n            });\n\n        }\n\n        $('.table__cell').removeClass('table__dragging__element').addClass('transitions');\n\n        $.updateTableCells();\n\n        drag_row = false;\n        drag_col = false;\n\n        return false;\n    });\n\n\n});"]}