{"version":3,"file":"table.min.js","sources":["../../../../../third_party/table/js/table.js"],"names":["$","document","ready","closest","num","arr","counter","each","Math","abs","this","position","addRowActions","row_num","append","cell_height","addColActions","col_num","cell_width","addTransitionsClass","addClass","getTableHeight","num_rows","updateTableCells","field_id","getTable","data","tabindex","row","col","num_cols","current_cell_first_child","attr","getTableLeftBar","getTableCells","getTableCol","getTableRow","getTableRowDragger","undefined","getTableColDragger","getTableRowDeleteLink","getTableColDeleteLink","updateTableRow","move_index","new_row_num","current_row","current_drag_row","current_row_delete_link","row_position","row_positions","css","updateTableCol","new_col_num","current_col","current_drag_col","current_col_delete_link","col_position","col_positions","updateRowPositionsCache","i","push","updateColPositionCache","the_table","dragging","drag_row","drag_col","last_drag_x","last_drag_y","height","x","y","setTimeout","on","e","preventDefault","new_row_position","width","new_col_position","the_table_row","the_table_row_dragger","the_table_row_delete_link","confirm","remove","removeClass","the_table_col","the_table_col_dragger","the_table_col_delete_link","stopPropagation","drag_element","fadeOut","not","pageY","offset","top","drag_link","closest_row","new_row_index","should_move_row","should_move_row_to_y","should_move_row_down","should_move_row_down_to_y","pageX","left","drag_col_link","closest_col","new_col_index","should_move_over_col_to_x","should_move_over_col_right_to","fadeIn","row_y","row_counter","show","row_x","col_counter"],"mappings":"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","sourcesContent":["$(document).ready(function(e) {\n\n    /**\n     * Find the closest number in an array to the number provided\n     *\n     * @param num number to find closest to\n     * @param arr array of numbers\n     * @return object with \"position\" (array index) and \"closest\" (number) (ie. position: 1, closest: 100)\n     */\n    $.closest = function(num, arr) {\n        var closest = null;\n        var counter = -1;\n\n        $.each(arr, function() {\n            if (closest === null || Math.abs(this - num) < Math.abs(closest - num)) {\n                closest = this;\n                counter++;\n            }\n        });\n\n        return {position: counter, closest: closest};\n    };\n\n    /**\n     * Add a row reoder \"flip\" to the table + delete icon\n     * @param row\n     */\n    $.addRowActions = function(row_num) {\n        $('.table__table').append('<div class=\"drag-row icon-reorder\" style=\"top:'+((row_num-1) * cell_height)+'px\" data-row=\"'+row_num+'\"></div>');\n        $('.table__table').append('<div class=\"table__table__delete-row icon-remove-circle\" style=\"top: '+((row_num*cell_height)-(cell_height/2)-5)+'px\" data-row=\"'+row_num+'\"></div>');\n    };\n\n    /**\n     * Add a column reoder \"flip\" to the table\n     * @param col_num\n     */\n    $.addColActions = function(col_num) {\n        $('.table__table').append('<div class=\"drag-col icon-reorder\" style=\"left:'+((col_num*cell_width)-19)+'px\" data-col=\"'+col_num+'\"></div>');\n        $('.table__table').append('<div class=\"table__table__delete-col icon-remove-circle\" style=\"left: ' + (((col_num*cell_width) - (cell_width/2) - 8 )  +'px\" data-col=\"'+col_num+'\"></div>'));\n    };\n\n\n    /**\n     * Add 'transitions' class to elements that should have it after init\n     */\n    $.addTransitionsClass = function() {\n        $('.table__table .table__cell').addClass('transitions');\n    };\n\n    /**\n     * Get the current suggested table height (w/o header)\n     */\n    $.getTableHeight = function() {\n        return num_rows * cell_height;\n    };\n\n    /**\n     * Update all table cells w/correct tabindex etc. - this is needed after\n     * dragging around rows/cols and adding/removing rows/cols\n     */\n    $.updateTableCells = function() {\n\n        var field_id = $.getTable().data('field_id');\n\n        /**\n         * Update table cell tabs indexes\n         */\n        var tabindex = 0;\n        for(var row=1; row < (num_rows+1); row++) {\n            for(var col=1; col < (num_cols+1); col++) {\n                tabindex++;\n                var current_cell_first_child =  $('.table__table .table__cell[data-row=\"'+row+'\"][data-col=\"'+col+'\"] :first-child');\n\n                // set tabindex\n                current_cell_first_child.attr('tabindex', tabindex);\n                current_cell_first_child.attr('name', 'table_cell_'+field_id+'['+row+']['+col+']');\n            }\n        }\n    };\n\n    /**\n     * Get the table\n     *\n     * @returns {*|jQuery|HTMLElement}\n     */\n    $.getTable = function() {\n        return $('.table__table');\n    };\n\n    $.getTableLeftBar = function() {\n        return $('.table__table__left__bar');\n    };\n\n    /**\n     * Get all table cells\n     *\n     * @returns {*|jQuery|HTMLElement}\n     */\n    $.getTableCells = function() {\n       return $('.table__table .table__cell');\n    };\n\n    /**\n     * Get column by column number\n     *\n     * @param col_num\n     */\n    $.getTableCol = function(col_num) {\n        return $('.table__table .table__cell[data-col='+col_num+']');\n    };\n\n    /**\n     * Get row by row number\n     *\n     * @param row_num\n     */\n    $.getTableRow = function(row_num) {\n       return $('.table__table .table__cell[data-row=\"'+(row_num)+'\"]');\n    };\n\n    /**\n     * Get a specific row dragger by row number, or all row draggers if row_num not specified\n     *\n     * @param row_num (can be empty)\n     */\n    $.getTableRowDragger = function(row_num) {\n        if(row_num !== undefined) {\n            return $('.drag-row[data-row=\"'+row_num+'\"]');\n        } else {\n            return $('.drag-row');\n        }\n    };\n\n    /**\n     * Get col dragger by column number, or all column draggers if col_num not specified\n     *\n     * @param col_num (can be empty)\n     */\n    $.getTableColDragger = function(col_num) {\n        if(col_num !== undefined) {\n            return $('.drag-col[data-col=\"'+col_num+'\"]');\n        } else {\n            return $('.drag-col');\n        }\n    };\n\n\n    /**\n     * Get row delete link by row number, or all if row number not defined\n     *\n     * @param row_num\n     * @returns {*|jQuery|HTMLElement}\n     */\n    $.getTableRowDeleteLink = function(row_num) {\n        if(row_num !== undefined) {\n            return $('.table__table__delete-row[data-row=\"'+row_num+'\"]');\n        } else {\n            return $('.table__table__delete-row');\n        }\n    };\n\n    /**\n     * Get col delete link by col number, or all if col number not defined\n     *\n     * @param col_num\n     * @returns {*|jQuery|HTMLElement}\n     */\n    $.getTableColDeleteLink = function(col_num) {\n        if(col_num !== undefined) {\n            return $('.table__table__delete-col[data-col=\"'+col_num+'\"]');\n        } else {\n            return $('.table__table__delete-col');\n        }\n    };\n\n\n    /**\n     * Will update a table row and its action icons to the correct postions\n     * @param row_num the row number\n     * @param move_index change the row number of this row (ie. -1 will move the row one up)\n     */\n    $.updateTableRow = function(row_num, move_index) {\n\n        var new_row_num = row_num;\n        var current_row = $.getTableRow(row_num);\n        var current_drag_row = $.getTableRowDragger(row_num);\n        var current_row_delete_link = $.getTableRowDeleteLink(row_num);\n\n        if(move_index !== undefined) {\n            new_row_num = row_num + move_index;\n            current_row.data('row', new_row_num);\n            current_row.attr('data-row', new_row_num);\n            current_drag_row.data('row', new_row_num);\n            current_drag_row.attr('data-row', new_row_num);\n            current_row_delete_link.data('row', new_row_num);\n            current_row_delete_link.attr('data-row', new_row_num);\n        }\n\n        var row_position = row_positions[new_row_num-1];\n        current_drag_row.css('top', row_position + 'px' );\n        current_row.css('top', row_position + 'px' );\n\n        current_row_delete_link.css('top', (row_position + (cell_height/2)-5) + 'px');\n    };\n\n\n    /**\n     * Will update a table column and its action icons to the correct positions\n     *\n     * @param col_num the column number\n     * @param move_index change the col number of this column (ie. -1 will move the col to the left)\n     */\n    $.updateTableCol = function(col_num, move_index) {\n\n        var new_col_num = col_num;\n        var current_col = $.getTableCol(col_num);\n        var current_drag_col = $.getTableColDragger(col_num);\n        var current_col_delete_link = $.getTableColDeleteLink(col_num);\n\n        if(move_index !== undefined) {\n            new_col_num = col_num + move_index;\n            current_col.data('col', new_col_num);\n            current_col.attr('data-col', new_col_num);\n            current_drag_col.data('col', new_col_num);\n            current_drag_col.attr('data-col', new_col_num);\n            current_col_delete_link.data('col', new_col_num);\n            current_col_delete_link.attr('data-col', new_col_num);\n        }\n\n        var col_position = col_positions[new_col_num-1];\n        current_col.css('left', col_position + 'px');\n        current_drag_col.css('left', (col_position - 19) + 'px');\n        current_col_delete_link.css('left', col_position + ((cell_width/2)-8) +'px');\n\n    };\n\n\n    /**\n     * Update row positions array\n     */\n    $.updateRowPositionsCache = function() {\n        row_positions = [];\n        for(var i=0; i < num_rows; i++) {\n            var row_position = i*cell_height;\n            row_positions.push( row_position );\n        }\n    };\n\n\n    /**\n     *  Update col position array\n     */\n    $.updateColPositionCache = function() {\n        col_positions = [];\n        for(var i=0; i < num_cols; i++) {\n            var col_position = i*cell_width;\n            col_positions.push( col_position );\n        }\n    };\n\n\n    var the_table = $.getTable();\n\n    var cell_width = 200;\n    var cell_height = 100;\n    var num_cols = the_table.data('init-num-cols');\n    var num_rows = the_table.data('init-num-rows');\n    var row_positions = [0];\n    var col_positions = [];\n\n    var dragging = false;       // is currently dragging? true/false\n    var drag_row = false;       // row number being dragged\n    var drag_col = false;       // col number being dragged\n    var last_drag_x = false;    // last X position used for row when dragging\n    var last_drag_y = false;    // last Y position used for col when dragging\n\n\n\n\n\n\n    /**\n     * Initiate the table. Will move cells around to their correct\n     * initial positions.\n     *\n     */\n    the_table.height($.getTableHeight());\n\n    var x = 0;\n    var y = 0;\n\n    $.addRowActions(1); // add for 1st\n\n    $.getTableCells().each(function(e) {\n        if(x >= num_cols) {\n            x = 0;\n            y++;\n\n            $.addRowActions(y+1);\n\n            row_positions.push(y*cell_height);\n        }\n        $(this).css('left', x*cell_width);\n        $(this).css('top', y*cell_height);\n\n        if(y === 0) {\n            col_positions.push(x*cell_width);            // as long as we are on first row, store col positions\n            $.addColActions(x+1);\n        }\n\n        x++;\n    });\n\n    $.getTableLeftBar().css('height', ((num_rows*cell_height) + 20) + 'px' );\n\n\n\n    // add transitions class after we have positioned them\n    setTimeout($.addTransitionsClass, 500);\n\n\n    /**\n     * Add row button click handler\n     */\n    $('.table__table__add-row').on('click', function(e) {\n        e.preventDefault();\n\n        var the_table = $.getTable();\n        var field_id = the_table.data('field_id');\n\n        the_table.css('height', $.getTableHeight() + cell_height);\n        var new_row_num = num_rows+1;\n        var new_row_position = (num_rows*cell_height);\n\n        $.addRowActions(new_row_num);\n\n        for(var i=0; i < num_cols; i++ ) {\n            the_table.append(\n                '<div style=\"top:'+new_row_position+'px; left:'+(i*cell_width)+'px\" class=\"table__cell transitions\" data-row=\"'+new_row_num+'\" data-col=\"'+(i+1)+'\"><textarea></textarea></div>'\n            );\n        }\n\n        row_positions.push(new_row_position);\n        num_rows++;\n\n        $.getTableLeftBar().css('height', ($.getTableHeight() + 20) + 'px' );\n\n        $.updateTableCells();\n    });\n\n    /**\n     * Add col button click handler\n     */\n    $('.table__table__add-col').on('click', function(e) {\n        e.preventDefault();\n\n        var the_table = $.getTable();\n        the_table.css('width', $('.table__table').width() + cell_width);\n        var new_col_num = num_cols+1;\n        var new_col_position = (num_cols*cell_width);\n\n        $.addColActions(new_col_num);\n        for(var i=0; i < num_rows; i++) {\n            the_table.append(\n                '<div style=\"top:'+(i*cell_height)+'px; left:'+new_col_position+'px\" class=\"table__cell transitions\" data-row=\"'+(i+1)+'\" data-col=\"'+new_col_num+'\"><textarea></textarea></div>'\n            );\n        }\n\n        col_positions.push(new_col_position);\n        num_cols++;\n\n        $.updateTableCells();\n    });\n\n\n    /**\n     * Delete row button click handler\n     */\n    $(document).on('click','.table__table__delete-row', function(e) {\n        var row = $(this).data('row');\n        var the_table_row = $.getTableRow(row);\n        var the_table_row_dragger = $.getTableRowDragger(row);\n        var the_table_row_delete_link = $.getTableRowDeleteLink(row);\n        var the_table = $.getTable();\n\n        the_table_row.addClass('table__cell-pending-delete');\n        if(confirm('Sure you want to delete the row?')) {\n\n            // remove the row + elements\n            the_table_row.remove();\n            the_table_row_dragger.remove();\n            the_table_row_delete_link.remove();\n\n            num_rows--;\n            the_table.css('height', cell_height*num_rows);\n            $.updateRowPositionsCache();\n\n            // move all rows below the deleted row one up\n            for(var i=row; i <= num_rows; i++) {\n                $.updateTableRow(i+1, -1);\n            }\n\n            $.getTableLeftBar().css('height', ($.getTableHeight() + 20) + 'px' );\n\n            $.updateTableCells();\n\n        } else {\n            the_table_row.removeClass('table__cell-pending-delete');\n        }\n    });\n\n\n    $(document).on('click', '.table__table__delete-col', function(e) {\n\n        var col = $(this).data('col');\n        var the_table_col = $.getTableCol(col);\n        var the_table_col_dragger = $.getTableColDragger(col);\n        var the_table_col_delete_link = $.getTableColDeleteLink(col);\n\n        the_table_col.addClass('table__cell-pending-delete');\n        if(confirm('Sure you want to delete the column?')) {\n\n            the_table_col.remove();\n            the_table_col_dragger.remove();\n            the_table_col_delete_link.remove();\n\n            num_cols --;\n            the_table.css('width', cell_width*num_cols);\n            $.updateColPositionCache();\n\n            for(var i=col; i <= num_cols; i++) {\n                $.updateTableCol(i+1, -1);\n            }\n\n        } else {\n            the_table_col.removeClass('table__cell-pending-delete');\n        }\n    });\n\n\n    /**\n     * drag-row mouse handler\n     */\n    $(document).on('mousedown', '.drag-row', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        $(this).addClass('active__dragging__link');\n        var row = $(this).data('row');\n        var drag_element = $.getTableRow(row);\n        drag_element.removeClass('transitions').addClass('table__dragging__element');\n\n        $.getTableRowDeleteLink().fadeOut();\n\n        $('.drag-row').not('.active__dragging__link').fadeOut();\n\n        dragging = true;\n        drag_row = row;\n        drag_col = false;\n        return false;\n    });\n\n\n    /**\n     * drag-col mouse handler\n     */\n    $(document).on('mousedown', '.drag-col', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        $(this).addClass('active__dragging__link');\n        $.getTableColDeleteLink().fadeOut();\n\n        var col = $(this).data('col');\n\n\n        $.getTableCol(col).removeClass('transitions').addClass('table__dragging__element');\n\n        $('.drag-col').not('.active__dragging__link').fadeOut();\n\n        dragging = true;\n        drag_col = col;\n        drag_row = false;\n\n        return false;\n    });\n\n    $(document).on('mousemove', function(e) {\n        e.preventDefault();\n\n        if(dragging) {\n\n            var the_table = $.getTable();\n\n            if(drag_row) {\n                last_drag_y = e.pageY - the_table.offset().top;\n\n                var drag_link = $('.drag-row.active__dragging__link');\n\n                /**\n                 * Move the row being dragged\n                 */\n                drag_link.css('top', last_drag_y+'px');\n                drag_link.css('left', '-20px');\n                drag_link.css('position', 'absolute');\n\n                $('.table__dragging__element').each(function(e) {\n                    $(this).css('top', last_drag_y + 'px');\n                });\n\n                var closest_row = $.closest(last_drag_y, row_positions);\n                var new_row_index = closest_row.position+1;\n\n                /**\n                 * We are moving down, so move the one beneath up\n                 */\n                if((closest_row.position+1) > drag_row) {\n\n                    var should_move_row = closest_row.position+1;\n                    var should_move_row_to_y = closest_row.closest - cell_height;\n\n                    $.getTableRow(should_move_row).each(function(e) {\n                        $(this).css('top', (should_move_row_to_y) + 'px');\n                        $(this).attr('data-row', should_move_row-1);\n                        $(this).data('row', should_move_row-1);\n                    });\n\n                    /**\n                     * Update row information for the row we are currently dragging\n                     */\n                     $('.table__dragging__element').each(function(e) {\n                        $(this).attr('data-row', new_row_index+1);\n                        $(this).data('row', new_row_index+1);\n                    });\n\n                    drag_row = new_row_index+1;\n\n\n                } else if((closest_row.position+1) < drag_row) {\n\n                    var should_move_row_down = closest_row.position+1;\n                    var should_move_row_down_to_y = should_move_row_down*cell_height;\n\n                    $.getTableRow(should_move_row_down).each(function(e) {\n                        $(this).css('top', (should_move_row_down_to_y) + 'px');\n                        $(this).attr('data-row', should_move_row_down+1);\n                        $(this).data('row', should_move_row_down+1);\n                    });\n\n                    /**\n                     * Update row information for the row being dragged\n                     */\n\n                    $('.table__dragging__element').each(function(e) {\n                        $(this).attr('data-row', new_row_index);\n                        $(this).data('row', new_row_index);\n                    });\n\n                    drag_row = new_row_index;\n                }\n\n            } else if(drag_col) {\n\n                last_drag_x = e.pageX - the_table.offset().left - cell_width;\n\n                var drag_col_link = $('.drag-col.active__dragging__link');\n\n                /**\n                 * Move the row being dragged\n                 */\n                drag_col_link.css('top', '-20px');\n                drag_col_link.css('left', (last_drag_x+cell_width-19)+'px');\n                drag_col_link.css('position', 'absolute');\n\n                /**\n                 * Move the column being dragged\n                 */\n                $('.table__dragging__element').each(function(e) {\n                    $(this).css('left', last_drag_x + 'px');\n                });\n\n                var closest_col = $.closest(last_drag_x, col_positions);\n                var new_col_index = closest_col.position+1;\n\n                if(new_col_index > drag_col) {\n\n                    var should_move_over_col_to_x = (closest_col.position-1) * cell_width;\n\n                    /**\n                     * Move the col we are over left\n                     */\n                    $.getTableCol(new_col_index).each(function(e) {\n                        $(this).css('left', (should_move_over_col_to_x) + 'px');\n                        $(this).attr('data-col', new_col_index-1);\n                        $(this).data('col', new_col_index-1);\n                    });\n\n                    $('.table__dragging__element').each(function(e) {\n                        $(this).attr('data-col', new_col_index);\n                        $(this).data('col', new_col_index);\n                    });\n\n                    drag_col = new_col_index;\n\n\n                } else if(new_col_index < drag_col) {\n\n                    var should_move_over_col_right_to =  (closest_col.position+1) * cell_width;\n\n                    /**\n                     * Move the col we are over right\n                     */\n                    $.getTableCol(new_col_index).each(function(e) {\n                        $(this).css('left', (should_move_over_col_right_to) + 'px');\n                        $(this).attr('data-col', new_col_index+1);\n                        $(this).data('col', new_col_index+1);\n                    });\n\n                    $('.table__dragging__element').each(function(e) {\n                        $(this).attr('data-col', new_col_index);\n                        $(this).data('col', new_col_index);\n                    });\n\n                    drag_col = new_col_index;\n\n                }\n            }\n        }\n\n        return false;\n    });\n\n    $(document).on('mouseup', function(e) {\n        e.preventDefault();\n        dragging = false;\n\n        $('.active__dragging__link').removeClass('active__dragging__link');\n\n        if(drag_row) {  // we were dragging a row, so find the closest spot for it\n\n            $.getTableRowDeleteLink().fadeIn();\n\n            var closest_row = $.closest(last_drag_y, row_positions);\n            var row_y = closest_row.closest;\n            $('.table__dragging__element').css('top', row_y+'px');\n\n            /**\n             * Go through all drag rows and position them correctly + set data-row based on position in HTML\n             */\n            var row_counter = 1;\n            $.getTableRowDragger().each(function(e) {\n                $(this).css('top', ((row_counter-1) * cell_height) + 'px' );\n                $(this).attr('data-row', row_counter);\n                $(this).data('row', row_counter);\n                row_counter++;\n\n                $(this).show();\n            });\n\n\n        } else if(drag_col) {\n\n            $.getTableColDeleteLink().fadeIn();\n\n            var closest_col = $.closest(last_drag_x, col_positions);\n            var row_x = closest_col.closest;\n            $('.table__dragging__element').css('left', row_x+'px');\n\n            var col_counter = 1;\n            $.getTableColDragger().each(function(e) {\n                $(this).css('left', ((col_counter * cell_width)-19) + 'px' );\n                $(this).attr('data-col', col_counter);\n                $(this).data('col', col_counter);\n                col_counter++;\n\n                $(this).show();\n            });\n\n        }\n\n        $.getTableCells().removeClass('table__dragging__element').addClass('transitions');\n\n        $.updateTableCells();\n\n        drag_row = false;\n        drag_col = false;\n\n        return false;\n    });\n\n\n});"]}